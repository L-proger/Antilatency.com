//Generated by AntilatencyApiGenerator
using Csml;
public sealed partial class Api : Scope {
	public sealed partial class Antilatency : Scope {
		public sealed partial class DeviceNetwork : Scope {
			public static IElement NameRef => new ContentReplace(FullNameRef, $"DeviceNetwork");
			public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork");
			private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork",null,$"Namespace in `{Api.Antilatency.FullNameRef}`")[new Section("Types")
				[new UnorderedList()
					[$"*interface* `{ICotaskConstructor.NameRef}`"]
					[$"*interface* `{INetwork.NameRef}`"]
					[$"*interface* `{IDeviceFilter.NameRef}`"]
					[$"*struct* `{UsbDeviceFilter.NameRef}`"]
					[$"*struct* `{IpDeviceFilter.NameRef}`"]
					[$"*enum* `{NodeHandle.NameRef}`"]
					[$"*enum* `{NodeStatus.NameRef}`"]
					[$"*interface* `{ISynchronousConnection.NameRef}`"]
					[$"*interface* `{IPropertyCotask.NameRef}`"]
					[$"*interface* `{ICotask.NameRef}`"]
					[$"*interface* `{ICotaskBatteryPowered.NameRef}`"]
					[$"*constant group* `{Constants.NameRef}`"]
					[$"*enum* `{UsbVendorId.NameRef}`"]
					[$"*enum* `{LogLevel.NameRef}`"]
					[$"*interface* `{ILibrary.NameRef}`"]
					[$"*interface* `{IInternalPropertyCotask.NameRef}`"]
				]
			];
			public sealed partial class UsbDeviceFilter : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"UsbDeviceFilter");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.UsbDeviceFilter");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.UsbDeviceFilter",null,$"Struct in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope UsbDeviceFilter
			
			public sealed partial class IpDeviceFilter : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"IpDeviceFilter");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IpDeviceFilter");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IpDeviceFilter",null,$"Struct in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope IpDeviceFilter
			
			public sealed partial class IDeviceFilter : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"IDeviceFilter");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IDeviceFilter");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {addUsbDevice.RawDeclarationCode}\n    {addIpDevice.RawDeclarationCode}\n    {getUsbDevice.RawDeclarationCode}\n    {getIpDevice.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IDeviceFilter",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class addUsbDevice : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"addUsbDevice");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IDeviceFilter.addUsbDevice");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.usbDeviceType.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IDeviceFilter\u200B.addUsbDevice",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.usbDeviceType.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class usbDeviceType : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.UsbDeviceFilter.FullNameRef)} {Name}");public static IElement Name => new Modify($"usbDeviceType").SetAttributeValue("title", "parameter usbDeviceType");
						} //scope usbDeviceType
					} //scope Parameters
				} //scope addUsbDevice
				public sealed partial class addIpDevice : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"addIpDevice");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IDeviceFilter.addIpDevice");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.ipDeviceType.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IDeviceFilter\u200B.addIpDevice",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.ipDeviceType.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class ipDeviceType : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IpDeviceFilter.FullNameRef)} {Name}");public static IElement Name => new Modify($"ipDeviceType").SetAttributeValue("title", "parameter ipDeviceType");
						} //scope ipDeviceType
					} //scope Parameters
				} //scope addIpDevice
				public sealed partial class getUsbDevice : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getUsbDevice");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IDeviceFilter.getUsbDevice");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.UsbDeviceFilter.FullNameRef)} {NameRef}({Parameters.index.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IDeviceFilter\u200B.getUsbDevice",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.UsbDeviceFilter.FullNameRef)} {NameRef}({Parameters.index.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class index : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("uint")} {Name}");public static IElement Name => new Modify($"index").SetAttributeValue("title", "parameter index");
						} //scope index
					} //scope Parameters
				} //scope getUsbDevice
				public sealed partial class getIpDevice : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getIpDevice");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IDeviceFilter.getIpDevice");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IpDeviceFilter.FullNameRef)} {NameRef}({Parameters.index.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IDeviceFilter\u200B.getIpDevice",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.IpDeviceFilter.FullNameRef)} {NameRef}({Parameters.index.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class index : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("uint")} {Name}");public static IElement Name => new Modify($"index").SetAttributeValue("title", "parameter index");
						} //scope index
					} //scope Parameters
				} //scope getIpDevice
			} //scope IDeviceFilter
			
			public sealed partial class NodeHandle : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"NodeHandle");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.NodeHandle");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.NodeHandle",null,$"Enum in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope NodeHandle
			
			public sealed partial class NodeStatus : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"NodeStatus");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.NodeStatus");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.NodeStatus",null,$"Enum in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope NodeStatus
			
			public sealed partial class ISynchronousConnection : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"ISynchronousConnection");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ISynchronousConnection");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {getPackets.RawDeclarationCode}\n    {getAvailablePackets.RawDeclarationCode}\n    {writePacket.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ISynchronousConnection",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				/// <summary>Get received packets. Blocks until any packets received or task finished.</summary>
				/// <returns>Received packets array. Zero packets count if task is finished.</returns>
				public sealed partial class getPackets : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getPackets");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ISynchronousConnection.getPackets");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.FullNameRef)}[] {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ISynchronousConnection\u200B.getPackets",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ISynchronousConnection.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.FullNameRef)}[] {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getPackets
				/// <summary>Get received packets.</summary>
				/// <param name = "taskFinished">
				/// Is task finished.
				/// </param>
				/// <returns>Received packets array. Zero packets count if no packets received.</returns>
				public sealed partial class getAvailablePackets : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getAvailablePackets");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ISynchronousConnection.getAvailablePackets");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.FullNameRef)}[] {NameRef}({Parameters.taskFinished.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ISynchronousConnection\u200B.getAvailablePackets",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ISynchronousConnection.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.FullNameRef)}[] {NameRef}({Parameters.taskFinished.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class taskFinished : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("bool")} {Name}");public static IElement Name => new Modify($"taskFinished").SetAttributeValue("title", "parameter taskFinished");
						} //scope taskFinished
					} //scope Parameters
				} //scope getAvailablePackets
				public sealed partial class writePacket : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"writePacket");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ISynchronousConnection.writePacket");
					public static IElement RawDeclarationCode => new Text($"{Type("bool")} {NameRef}({Parameters.packet.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ISynchronousConnection\u200B.writePacket",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ISynchronousConnection.FullNameRef)}`\n`{Type("bool")} {NameRef}({Parameters.packet.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class packet : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.FullNameRef)} {Name}");public static IElement Name => new Modify($"packet").SetAttributeValue("title", "parameter packet");
						} //scope packet
					} //scope Parameters
				} //scope writePacket
			} //scope ISynchronousConnection
			
			public sealed partial class ICotask : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"ICotask");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotask");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {isTaskFinished.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotask",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class isTaskFinished : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"isTaskFinished");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotask.isTaskFinished");
					public static IElement RawDeclarationCode => new Text($"{Type("bool")} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotask\u200B.isTaskFinished",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ICotask.FullNameRef)}`\n`{Type("bool")} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope isTaskFinished
			} //scope ICotask
			
			public sealed partial class IPropertyCotask : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"IPropertyCotask");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type(Api.Antilatency.DeviceNetwork.ICotask.FullNameRef)} {{\n    {getPropertyKey.RawDeclarationCode}\n    {getStringProperty.RawDeclarationCode}\n    {setStringProperty.RawDeclarationCode}\n    {getBinaryProperty.RawDeclarationCode}\n    {setBinaryProperty.RawDeclarationCode}\n    {deleteProperty.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class getPropertyKey : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getPropertyKey");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.getPropertyKey");
					public static IElement RawDeclarationCode => new Text($"{Type("string")} {NameRef}({Parameters.index.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.getPropertyKey",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("string")} {NameRef}({Parameters.index.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class index : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("uint")} {Name}");public static IElement Name => new Modify($"index").SetAttributeValue("title", "parameter index");
						} //scope index
					} //scope Parameters
				} //scope getPropertyKey
				public sealed partial class getStringProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getStringProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.getStringProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("string")} {NameRef}({Parameters.key.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.getStringProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("string")} {NameRef}({Parameters.key.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
					} //scope Parameters
				} //scope getStringProperty
				public sealed partial class setStringProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"setStringProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.setStringProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode}, {Parameters.value.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.setStringProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode}, {Parameters.value.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
						public sealed partial class value : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"value").SetAttributeValue("title", "parameter value");
						} //scope value
					} //scope Parameters
				} //scope setStringProperty
				public sealed partial class getBinaryProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getBinaryProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.getBinaryProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("byte")}[] {NameRef}({Parameters.key.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.getBinaryProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("byte")}[] {NameRef}({Parameters.key.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
					} //scope Parameters
				} //scope getBinaryProperty
				public sealed partial class setBinaryProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"setBinaryProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.setBinaryProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode}, {Parameters.value.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.setBinaryProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode}, {Parameters.value.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
						public sealed partial class value : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("byte")}[] {Name}");public static IElement Name => new Modify($"value").SetAttributeValue("title", "parameter value");
						} //scope value
					} //scope Parameters
				} //scope setBinaryProperty
				public sealed partial class deleteProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"deleteProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IPropertyCotask.deleteProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IPropertyCotask\u200B.deleteProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.key.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
					} //scope Parameters
				} //scope deleteProperty
			} //scope IPropertyCotask
			
			public sealed partial class INetwork : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"INetwork");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {getUpdateId.RawDeclarationCode}\n    {getDeviceFilter.RawDeclarationCode}\n    {getNodes.RawDeclarationCode}\n    {nodeGetStatus.RawDeclarationCode}\n    {nodeIsTaskSupported.RawDeclarationCode}\n    {nodeGetParent.RawDeclarationCode}\n    {nodeGetPhysicalPath.RawDeclarationCode}\n    {nodeStartTask.RawDeclarationCode}\n    {nodeStartTask2.RawDeclarationCode}\n    {nodeGetStringProperty.RawDeclarationCode}\n    {nodeGetBinaryProperty.RawDeclarationCode}\n    {nodeStartPropertyTask.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				/// <summary>Every time any supported device is connected or disconnected, the update ID will be incremented. You can use this method to check if there are any changes in the ADN.</summary>
				/// <returns>Current factory update ID.</returns>
				public sealed partial class getUpdateId : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getUpdateId");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.getUpdateId");
					public static IElement RawDeclarationCode => new Text($"{Type("uint")} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.getUpdateId",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type("uint")} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getUpdateId
				/// <summary></summary>
				/// <returns></returns>
				public sealed partial class getDeviceFilter : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getDeviceFilter");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.getDeviceFilter");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.getDeviceFilter",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getDeviceFilter
				/// <summary>Get all currently connected nodes.</summary>
				public sealed partial class getNodes : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getNodes");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.getNodes");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)}[] {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.getNodes",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)}[] {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getNodes
				/// <summary>Get the current NodeStatus for the node.</summary>
				/// <param name = "node">
				/// Node handle to get status of.
				/// </param>
				public sealed partial class nodeGetStatus : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeGetStatus");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeGetStatus");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeStatus.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeGetStatus",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.NodeStatus.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
					} //scope Parameters
				} //scope nodeGetStatus
				/// <summary>Checks if the task is supported by the node.</summary>
				/// <param name = "node">
				/// Node handle.
				/// </param>
				/// <param name = "taskId">
				/// Task ID.
				/// </param>
				/// <returns>True if node supports such task, otherwise false.</returns>
				public sealed partial class nodeIsTaskSupported : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeIsTaskSupported");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeIsTaskSupported");
					public static IElement RawDeclarationCode => new Text($"{Type("bool")} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeIsTaskSupported",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type("bool")} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
						public sealed partial class taskId : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("Guid")} {Name}");public static IElement Name => new Modify($"taskId").SetAttributeValue("title", "parameter taskId");
						} //scope taskId
					} //scope Parameters
				} //scope nodeIsTaskSupported
				/// <summary>Get parent for the node, in case of USB node this method will return Antilatency.DeviceNetwork.NodeHandle.Null</summary>
				/// <param name = "node">
				/// Node handle.
				/// </param>
				public sealed partial class nodeGetParent : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeGetParent");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeGetParent");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeGetParent",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
					} //scope Parameters
				} //scope nodeGetParent
				/// <summary>Physical address path to the first level device that contains this node in the network tree.</summary>
				/// <param name = "node">
				/// Node handle.
				/// </param>
				/// <returns>String represents physical path to first level device (connected via USB).</returns>
				public sealed partial class nodeGetPhysicalPath : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeGetPhysicalPath");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeGetPhysicalPath");
					public static IElement RawDeclarationCode => new Text($"{Type("string")} {NameRef}({Parameters.node.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeGetPhysicalPath",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type("string")} {NameRef}({Parameters.node.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
					} //scope Parameters
				} //scope nodeGetPhysicalPath
				/// <summary>Run the task on the node with the asynchronous packet receive API.</summary>
				/// <param name = "node">
				/// Node handle to start task on.
				/// </param>
				/// <param name = "taskId">
				/// Task ID.
				/// </param>
				/// <param name = "taskDataReceiver">
				/// Task data receiver.
				/// </param>
				public sealed partial class nodeStartTask : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeStartTask");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeStartTask");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode}, {Parameters.taskDataReceiver.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeStartTask",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode}, {Parameters.taskDataReceiver.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
						public sealed partial class taskId : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("Guid")} {Name}");public static IElement Name => new Modify($"taskId").SetAttributeValue("title", "parameter taskId");
						} //scope taskId
						public sealed partial class taskDataReceiver : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.FullNameRef)} {Name}");public static IElement Name => new Modify($"taskDataReceiver").SetAttributeValue("title", "parameter taskDataReceiver");
						} //scope taskDataReceiver
					} //scope Parameters
				} //scope nodeStartTask
				/// <summary>Run the task on the node with the synchronous packet receive API.</summary>
				/// <param name = "node">
				/// Node handle to start task on.
				/// </param>
				/// <param name = "taskId">
				/// Task ID.
				/// </param>
				public sealed partial class nodeStartTask2 : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeStartTask2");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeStartTask2");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.ISynchronousConnection.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeStartTask2",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.ISynchronousConnection.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.taskId.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
						public sealed partial class taskId : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("Guid")} {Name}");public static IElement Name => new Modify($"taskId").SetAttributeValue("title", "parameter taskId");
						} //scope taskId
					} //scope Parameters
				} //scope nodeStartTask2
				/// <summary>Get the node's string property value.</summary>
				/// <param name = "node">
				/// Node handle to get string property from.
				/// </param>
				/// <param name = "key">
				/// Property key. List of predefined properties you can find in the documentation, also there are some properties defined in the Antilatency.DeviceNetwork.Constants that is valid for every Antilatency device.
				/// </param>
				/// <returns>The node's string property value.</returns>
				public sealed partial class nodeGetStringProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeGetStringProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeGetStringProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("string")} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.key.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeGetStringProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type("string")} {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.key.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
					} //scope Parameters
				} //scope nodeGetStringProperty
				/// <summary>Get the node's binary property value.</summary>
				/// <param name = "node">
				/// Node handle to get binary property from.
				/// </param>
				/// <param name = "key">
				/// Property key.
				/// </param>
				/// <returns>The node's binary property value.</returns>
				public sealed partial class nodeGetBinaryProperty : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeGetBinaryProperty");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeGetBinaryProperty");
					public static IElement RawDeclarationCode => new Text($"{Type("byte")}[] {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.key.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeGetBinaryProperty",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type("byte")}[] {NameRef}({Parameters.node.RawDeclarationCode}, {Parameters.key.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
						public sealed partial class key : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type("string")} {Name}");public static IElement Name => new Modify($"key").SetAttributeValue("title", "parameter key");
						} //scope key
					} //scope Parameters
				} //scope nodeGetBinaryProperty
				/// <summary>Start the property task on the node.</summary>
				/// <param name = "node">
				/// Node handle to start property task on.
				/// </param>
				public sealed partial class nodeStartPropertyTask : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"nodeStartPropertyTask");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.INetwork.nodeStartPropertyTask");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.INetwork\u200B.nodeStartPropertyTask",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)} {NameRef}({Parameters.node.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
					} //scope Parameters
				} //scope nodeStartPropertyTask
			} //scope INetwork
			
			public sealed partial class ICotaskConstructor : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"ICotaskConstructor");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotaskConstructor");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {isSupported.RawDeclarationCode}\n    {findSupportedNodes.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotaskConstructor",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class isSupported : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"isSupported");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotaskConstructor.isSupported");
					public static IElement RawDeclarationCode => new Text($"{Type("bool")} {NameRef}({Parameters.network.RawDeclarationCode}, {Parameters.node.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotaskConstructor\u200B.isSupported",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ICotaskConstructor.FullNameRef)}`\n`{Type("bool")} {NameRef}({Parameters.network.RawDeclarationCode}, {Parameters.node.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class network : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)} {Name}");public static IElement Name => new Modify($"network").SetAttributeValue("title", "parameter network");
						} //scope network
						public sealed partial class node : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)} {Name}");public static IElement Name => new Modify($"node").SetAttributeValue("title", "parameter node");
						} //scope node
					} //scope Parameters
				} //scope isSupported
				public sealed partial class findSupportedNodes : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"findSupportedNodes");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotaskConstructor.findSupportedNodes");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)}[] {NameRef}({Parameters.network.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotaskConstructor\u200B.findSupportedNodes",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ICotaskConstructor.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.NodeHandle.FullNameRef)}[] {NameRef}({Parameters.network.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class network : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)} {Name}");public static IElement Name => new Modify($"network").SetAttributeValue("title", "parameter network");
						} //scope network
					} //scope Parameters
				} //scope findSupportedNodes
			} //scope ICotaskConstructor
			
			public sealed partial class ICotaskBatteryPowered : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"ICotaskBatteryPowered");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotaskBatteryPowered");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type(Api.Antilatency.DeviceNetwork.ICotask.FullNameRef)} {{\n    {getBatteryLevel.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotaskBatteryPowered",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				/// <summary>Get actual battery level.</summary>
				/// <returns>Battery level in range 0 .. 1. Value 0 - empty battery, value 1 - full battery.</returns>
				public sealed partial class getBatteryLevel : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getBatteryLevel");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ICotaskBatteryPowered.getBatteryLevel");
					public static IElement RawDeclarationCode => new Text($"{Type("float")} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ICotaskBatteryPowered\u200B.getBatteryLevel",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ICotaskBatteryPowered.FullNameRef)}`\n`{Type("float")} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getBatteryLevel
			} //scope ICotaskBatteryPowered
			
			public sealed partial class Constants : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"Constants");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.Constants");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.Constants",null,$"Constants in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope Constants
			
			public sealed partial class UsbVendorId : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"UsbVendorId");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.UsbVendorId");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.UsbVendorId",null,$"Enum in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope UsbVendorId
			
			public sealed partial class LogLevel : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"LogLevel");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.LogLevel");
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.LogLevel",null,$"Enum in `{Api.Antilatency.DeviceNetwork.FullNameRef}`");
			} //scope LogLevel
			
			public sealed partial class ILibrary : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"ILibrary");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ILibrary");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n    {createFilter.RawDeclarationCode}\n    {createNetwork.RawDeclarationCode}\n    {getVersion.RawDeclarationCode}\n    {setLogLevel.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ILibrary",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class createFilter : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"createFilter");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ILibrary.createFilter");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ILibrary\u200B.createFilter",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ILibrary.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope createFilter
				/// <summary>Create Antilatency Device Network object</summary>
				/// <param name = "deviceDescription">
				/// </param>
				public sealed partial class createNetwork : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"createNetwork");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ILibrary.createNetwork");
					public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)} {NameRef}({Parameters.deviceFilter.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ILibrary\u200B.createNetwork",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ILibrary.FullNameRef)}`\n`{Type(Api.Antilatency.DeviceNetwork.INetwork.FullNameRef)} {NameRef}({Parameters.deviceFilter.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class deviceFilter : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.IDeviceFilter.FullNameRef)} {Name}");public static IElement Name => new Modify($"deviceFilter").SetAttributeValue("title", "parameter deviceFilter");
						} //scope deviceFilter
					} //scope Parameters
				} //scope createNetwork
				/// <summary>Get the Antilatency Device Network library version.</summary>
				public sealed partial class getVersion : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"getVersion");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ILibrary.getVersion");
					public static IElement RawDeclarationCode => new Text($"{Type("string")} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ILibrary\u200B.getVersion",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ILibrary.FullNameRef)}`\n`{Type("string")} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope getVersion
				/// <summary>Set the Antilatency Device Network log verbosity level.</summary>
				public sealed partial class setLogLevel : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"setLogLevel");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.ILibrary.setLogLevel");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}({Parameters.level.RawDeclarationCode})");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.ILibrary\u200B.setLogLevel",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.ILibrary.FullNameRef)}`\n`{Type("void")} {NameRef}({Parameters.level.RawDeclarationCode})`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
						public sealed partial class level : Scope {
							public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.LogLevel.FullNameRef)} {Name}");public static IElement Name => new Modify($"level").SetAttributeValue("title", "parameter level");
						} //scope level
					} //scope Parameters
				} //scope setLogLevel
			} //scope ILibrary
			
			public sealed partial class IInternalPropertyCotask : Scope {
				public static IElement NameRef => new ContentReplace(FullNameRef, $"IInternalPropertyCotask");
				public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IInternalPropertyCotask");
				public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type(Api.Antilatency.DeviceNetwork.IPropertyCotask.FullNameRef)} {{\n    {allowAccessToSystemProperties.RawDeclarationCode}\n}}");
				private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
				private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IInternalPropertyCotask",null,$"Interface in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[CodeBlock];
				public sealed partial class allowAccessToSystemProperties : Scope {
					public static IElement NameRef => new ContentReplace(FullNameRef, $"allowAccessToSystemProperties");
					public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.IInternalPropertyCotask.allowAccessToSystemProperties");
					public static IElement RawDeclarationCode => new Text($"{Type("void")} {NameRef}()");
					private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.IInternalPropertyCotask\u200B.allowAccessToSystemProperties",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.IInternalPropertyCotask.FullNameRef)}`\n`{Type("void")} {NameRef}()`")
						[new Section("Parameters")]
						;
					public sealed partial class Parameters : Scope {
					} //scope Parameters
				} //scope allowAccessToSystemProperties
			} //scope IInternalPropertyCotask
			
			
		} //scope DeviceNetwork
	} //scope Antilatency
} //scope Api
