//Generated by AntilatencyApiGenerator
using Csml;
public sealed partial class Api : Scope {
	public sealed partial class Antilatency : Scope {
		public sealed partial class DeviceNetwork : Scope {
			public sealed partial class Interop : Scope {
				public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"Interop");
				public static IElement FullNameRef => new Deferred(()=>Material);
				public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop",null,$"Namespace in `{Api.Antilatency.DeviceNetwork.FullNameRef}`")[new Section("Types")
					[new UnorderedList()
						[$"*interface* `{IDataReceiver.NameRef}`"]
						[$"*struct* `{Packet.NameRef}`"]
						[$"*constant group* `{Constants.NameRef}`"]
						[$"*struct* `{String16.NameRef}`"]
						[$"*struct* `{WriteBufferOverflowException.NameRef}`"]
						[$"*struct* `{PacketDescription.NameRef}`"]
						[$"*interface* `{ITaskSignature.NameRef}`"]
						[$"*interface* `{IConnection.NameRef}`"]
					]
				];
				public sealed partial class Packet : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"Packet");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.Packet",null,$"Struct in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static IElement RawDeclarationCode => new Text($"{Struct} {NameRef} {{\n    {Fields.id.RawDeclarationCode};\n    {Fields.data.RawDeclarationCode};\n    {Fields.size.RawDeclarationCode};\n}}");
					public sealed partial class Fields : Scope {
						public sealed partial class id : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("byte")} {Name}");
							public static IElement Name => new Modify($"id").SetAttributeValue("title", "field id");
						} //scope id
						public sealed partial class data : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("constPointer")} {Name}");
							public static IElement Name => new Modify($"data").SetAttributeValue("title", "field data");
						} //scope data
						public sealed partial class size : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("uint")} {Name}");
							public static IElement Name => new Modify($"size").SetAttributeValue("title", "field size");
						} //scope size
					} //scope Fields
				} //scope Packet
				
				public sealed partial class IDataReceiver : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"IDataReceiver");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : InterfaceContract.{Type("IInterface")} {{\n    {Methods.packet.RawDeclarationCode};\n}}");
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.IDataReceiver",null,$"Interface in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public sealed partial class Methods : Scope {
						/// <summary>Write packet to data receiver</summary>
						/// <param name = "packet">
						/// Packet with data
						/// </param>
						public sealed partial class packet : Scope {
							public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"packet");
							public static IElement FullNameRef => new Deferred(()=>Material);
							public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							public static IElement CodeInline => CodeInline(RawDeclarationCode);
							public static IElement RawDeclarationCode => new Text($"{Keyword("void")} {NameRef}({Parameters.packet.RawDeclarationCode})");
							public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.IDataReceiver\u200B.packet",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.NameRef)}`\n`{RawDeclarationCode}`")
								[new Section("Parameters")]
								;
							public sealed partial class Parameters : Scope {
								public sealed partial class packet : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.Packet.NameRef)} {Name}");
									public static IElement Name => new Modify($"packet").SetAttributeValue("title", "parameter packet");
								} //scope packet
							} //scope Parameters
						} //scope packet
					} //scope Methods
				} //scope IDataReceiver
				
				public sealed partial class Constants : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"Constants");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.Constants",null,$"Constants in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`");
				} //scope Constants
				
				public sealed partial class String16 : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"String16");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.String16",null,$"Struct in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static IElement RawDeclarationCode => new Text($"{Struct} {NameRef} {{\n    {Fields.data.RawDeclarationCode};\n}}");
					public sealed partial class Fields : Scope {
						public sealed partial class data : Scope {
							public static IElement RawDeclarationCode => new Text($"Memory.{Type(Api.Antilatency.DeviceNetwork.Interop.Memory.Memory16.NameRef)} {Name}");
							public static IElement Name => new Modify($"data").SetAttributeValue("title", "field data");
						} //scope data
					} //scope Fields
				} //scope String16
				
				public sealed partial class WriteBufferOverflowException : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"WriteBufferOverflowException");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.WriteBufferOverflowException",null,$"Exception in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`");
				} //scope WriteBufferOverflowException
				
				public sealed partial class PacketDescription : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"PacketDescription");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.PacketDescription",null,$"Struct in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static IElement RawDeclarationCode => new Text($"{Struct} {NameRef} {{\n    {Fields.id.RawDeclarationCode};\n    {Fields.size.RawDeclarationCode};\n    {Fields.barrierFor.RawDeclarationCode};\n}}");
					public sealed partial class Fields : Scope {
						public sealed partial class id : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("byte")} {Name}");
							public static IElement Name => new Modify($"id").SetAttributeValue("title", "field id");
						} //scope id
						public sealed partial class size : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("byte")} {Name}");
							public static IElement Name => new Modify($"size").SetAttributeValue("title", "field size");
						} //scope size
						public sealed partial class barrierFor : Scope {
							public static IElement RawDeclarationCode => new Text($"{Keyword("uint")} {Name}");
							public static IElement Name => new Modify($"barrierFor").SetAttributeValue("title", "field barrierFor");
						} //scope barrierFor
					} //scope Fields
				} //scope PacketDescription
				
				public sealed partial class ITaskSignature : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"ITaskSignature");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : InterfaceContract.{Type("IInterface")} {{\n    {Methods.getGuid.RawDeclarationCode};\n    {Methods.getWritePacketDescription.RawDeclarationCode};\n    {Methods.getReadPacketDescription.RawDeclarationCode};\n}}");
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.ITaskSignature",null,$"Interface in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public sealed partial class Methods : Scope {
						public sealed partial class getGuid : Scope {
							public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"getGuid");
							public static IElement FullNameRef => new Deferred(()=>Material);
							public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							public static IElement CodeInline => CodeInline(RawDeclarationCode);
							public static IElement RawDeclarationCode => new Text($"{Keyword("Guid")} {NameRef}()");
							public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.ITaskSignature\u200B.getGuid",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.Interop.ITaskSignature.NameRef)}`\n`{RawDeclarationCode}`")
								[new Section("Parameters")]
								;
							public sealed partial class Parameters : Scope {
							} //scope Parameters
						} //scope getGuid
						public sealed partial class getWritePacketDescription : Scope {
							public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"getWritePacketDescription");
							public static IElement FullNameRef => new Deferred(()=>Material);
							public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							public static IElement CodeInline => CodeInline(RawDeclarationCode);
							public static IElement RawDeclarationCode => new Text($"{Keyword("bool")} {NameRef}({Parameters.index.RawDeclarationCode}, {Parameters.description.RawDeclarationCode})");
							public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.ITaskSignature\u200B.getWritePacketDescription",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.Interop.ITaskSignature.NameRef)}`\n`{RawDeclarationCode}`")
								[new Section("Parameters")]
								;
							public sealed partial class Parameters : Scope {
								public sealed partial class index : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Keyword("uint")} {Name}");
									public static IElement Name => new Modify($"index").SetAttributeValue("title", "parameter index");
								} //scope index
								public sealed partial class description : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.PacketDescription.NameRef)} {Name}");
									public static IElement Name => new Modify($"description").SetAttributeValue("title", "parameter description");
								} //scope description
							} //scope Parameters
						} //scope getWritePacketDescription
						public sealed partial class getReadPacketDescription : Scope {
							public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"getReadPacketDescription");
							public static IElement FullNameRef => new Deferred(()=>Material);
							public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							public static IElement CodeInline => CodeInline(RawDeclarationCode);
							public static IElement RawDeclarationCode => new Text($"{Keyword("bool")} {NameRef}({Parameters.index.RawDeclarationCode}, {Parameters.description.RawDeclarationCode})");
							public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.ITaskSignature\u200B.getReadPacketDescription",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.Interop.ITaskSignature.NameRef)}`\n`{RawDeclarationCode}`")
								[new Section("Parameters")]
								;
							public sealed partial class Parameters : Scope {
								public sealed partial class index : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Keyword("uint")} {Name}");
									public static IElement Name => new Modify($"index").SetAttributeValue("title", "parameter index");
								} //scope index
								public sealed partial class description : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.PacketDescription.NameRef)} {Name}");
									public static IElement Name => new Modify($"description").SetAttributeValue("title", "parameter description");
								} //scope description
							} //scope Parameters
						} //scope getReadPacketDescription
					} //scope Methods
				} //scope ITaskSignature
				
				public sealed partial class IConnection : Scope {
					public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"IConnection");
					public static IElement FullNameRef => new Deferred(()=>Material);
					public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.NameRef)} {{\n    {Methods.setDataReceiver.RawDeclarationCode};\n}}");
					public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
					public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.IConnection",null,$"Interface in `{Api.Antilatency.DeviceNetwork.Interop.FullNameRef}`")[CodeBlock];
					public sealed partial class Methods : Scope {
						public sealed partial class setDataReceiver : Scope {
							public static IElement NameRef => new Deferred(()=>Material).Modify().ContentReplace($"setDataReceiver");
							public static IElement FullNameRef => new Deferred(()=>Material);
							public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							public static IElement CodeInline => CodeInline(RawDeclarationCode);
							public static IElement RawDeclarationCode => new Text($"{Keyword("void")} {NameRef}({Parameters.dataReceiver.RawDeclarationCode})");
							public static Material Material => new Material("Antilatency\u200B.DeviceNetwork\u200B.Interop\u200B.IConnection\u200B.setDataReceiver",null,$"Method of `{Type(Api.Antilatency.DeviceNetwork.Interop.IConnection.NameRef)}`\n`{RawDeclarationCode}`")
								[new Section("Parameters")]
								;
							public sealed partial class Parameters : Scope {
								public sealed partial class dataReceiver : Scope {
									public static IElement CodeBlock => CodeBlock(RawDeclarationCode);
									public static IElement CodeInline => CodeInline(RawDeclarationCode);
									public static IElement RawDeclarationCode => new Text($"{Type(Api.Antilatency.DeviceNetwork.Interop.IDataReceiver.NameRef)} {Name}");
									public static IElement Name => new Modify($"dataReceiver").SetAttributeValue("title", "parameter dataReceiver");
								} //scope dataReceiver
							} //scope Parameters
						} //scope setDataReceiver
					} //scope Methods
				} //scope IConnection
				
				
			} //scope Interop
		} //scope DeviceNetwork
	} //scope Antilatency
} //scope Api
