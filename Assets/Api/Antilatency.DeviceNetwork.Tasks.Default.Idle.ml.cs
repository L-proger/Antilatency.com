//Generated by AntilatencyApiGenerator
using Csml;
public sealed partial class Api : Scope {
	public sealed partial class Antilatency : Scope {
		public sealed partial class DeviceNetwork : Scope {
			public sealed partial class Tasks : Scope {
				public sealed partial class Default : Scope {
					public sealed partial class Idle : Scope {
						public static IElement NameRef => new ContentReplace(FullNameRef, $"Idle");
						public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.Tasks.Default.Idle");
						private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.Tasks\u200B.Default\u200B.Idle",null,$"Namespace in `{Api.Antilatency.DeviceNetwork.Tasks.Default.FullNameRef}`")[new Section("Types")
							[new UnorderedList()
								[$"*constant group* `{Constants.NameRef}`"]
								[$"*interface* `{IHostToDevice.NameRef}`"]
								[$"*interface* `{IDeviceToHost.NameRef}`"]
							]
						];
						public sealed partial class Constants : Scope {
							public static IElement NameRef => new ContentReplace(FullNameRef, $"Constants");
							public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.Tasks.Default.Idle.Constants");
							private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.Tasks\u200B.Default\u200B.Idle\u200B.Constants",null,$"Constants in `{Api.Antilatency.DeviceNetwork.Tasks.Default.Idle.FullNameRef}`");
						} //scope Constants
						
						public sealed partial class IHostToDevice : Scope {
							public static IElement NameRef => new ContentReplace(FullNameRef, $"IHostToDevice");
							public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.Tasks.Default.Idle.IHostToDevice");
							public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n}}");
							private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.Tasks\u200B.Default\u200B.Idle\u200B.IHostToDevice",null,$"Interface in `{Api.Antilatency.DeviceNetwork.Tasks.Default.Idle.FullNameRef}`")[CodeBlock];
						} //scope IHostToDevice
						
						public sealed partial class IDeviceToHost : Scope {
							public static IElement NameRef => new ContentReplace(FullNameRef, $"IDeviceToHost");
							public static MultiLanguageGroup FullNameRef => new MultiLanguageGroup("Antilatency.DeviceNetwork.Tasks.Default.Idle.IDeviceToHost");
							public static IElement RawDeclarationCode => new Text($"{Interface} {NameRef} : {Type("Antilatency.InterfaceContract.IInterface")} {{\n}}");
							private static IElement CodeBlock => CodeBlock(RawDeclarationCode);
							private static Material FullNameRef_en => new Material("Antilatency\u200B.DeviceNetwork\u200B.Tasks\u200B.Default\u200B.Idle\u200B.IDeviceToHost",null,$"Interface in `{Api.Antilatency.DeviceNetwork.Tasks.Default.Idle.FullNameRef}`")[CodeBlock];
						} //scope IDeviceToHost
						
						
					} //scope Idle
				} //scope Default
			} //scope Tasks
		} //scope DeviceNetwork
	} //scope Antilatency
} //scope Api
